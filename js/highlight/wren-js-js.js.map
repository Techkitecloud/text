{"version":3,"sources":["webpack:///text/node_modules/highlight.js/lib/languages/wren.js","webpack:///text/node_modules/highlight.js/lib/languages/wren.js.js"],"names":["module","exports","hljs","regex","IDENT_RE","KEYWORDS","LITERALS","LANGUAGE_VARS","OPERATORS","FUNCTION","relevance","match","concat","className","FUNCTION_DEFINITION","either","starts","contains","begin","end","scope","CLASS_DEFINITION","variants","keywords","OPERATOR","PROPERTY","lookahead","excludeBegin","FIELD","CLASS_REFERENCE","_","NUMBER","C_NUMBER_MODE","SETTER","COMMENT_DOCS","COMMENT","SUBST","STRING","push","ALL_KWS","VARIABLE","join","name","keyword","literal","beginScope","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","emitWarning","warned","console","log"],"mappings":"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","file":"highlight/wren-js-js.js?v=d7dfbeea571c01734c17","sourcesContent":["/*\nLanguage: Wren\nDescription: Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.\nCategory: scripting\nAuthor: @joshgoebel\nMaintainer: @joshgoebel\nWebsite: https://wren.io/\n*/\n\n/** @type LanguageFn */\nfunction wren(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[a-zA-Z]\\w*/;\n  const KEYWORDS = [\n    \"as\",\n    \"break\",\n    \"class\",\n    \"construct\",\n    \"continue\",\n    \"else\",\n    \"for\",\n    \"foreign\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"is\",\n    \"return\",\n    \"static\",\n    \"var\",\n    \"while\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  const LANGUAGE_VARS = [\n    \"this\",\n    \"super\"\n  ];\n  const CORE_CLASSES = [\n    \"Bool\",\n    \"Class\",\n    \"Fiber\",\n    \"Fn\",\n    \"List\",\n    \"Map\",\n    \"Null\",\n    \"Num\",\n    \"Object\",\n    \"Range\",\n    \"Sequence\",\n    \"String\",\n    \"System\"\n  ];\n  const OPERATORS = [\n    \"-\",\n    \"~\",\n    /\\*/,\n    \"%\",\n    /\\.\\.\\./,\n    /\\.\\./,\n    /\\+/,\n    \"<<\", \">>\",\n    \">=\", \"<=\",\n    \"<\", \">\",\n    /\\^/,\n    /!=/,\n    /!/,\n    /\\bis\\b/,\n    \"==\",\n    \"&&\",\n    \"&\",\n    /\\|\\|/,\n    /\\|/,\n    /\\?:/,\n    \"=\"\n  ];\n  const FUNCTION = {\n    relevance: 0,\n    match: regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE, /(?=\\s*[({])/),\n    className: \"title.function\"\n  };\n  const FUNCTION_DEFINITION = {\n    match: regex.concat(\n      regex.either(\n        regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE),\n        regex.either(...OPERATORS)\n      ),\n      /(?=\\s*\\([^)]+\\)\\s*\\{)/),\n    className: \"title.function\",\n    starts: {\n      contains: [\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          contains: [\n            {\n              relevance: 0,\n              scope: \"params\",\n              match: IDENT_RE\n            }\n          ]\n        }\n      ]\n    }\n  };\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE,\n          /\\s+is\\s+/,\n          IDENT_RE\n        ]\n      },\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: KEYWORDS\n  };\n\n  const OPERATOR = {\n    relevance: 0,\n    match: regex.either(...OPERATORS),\n    className: \"operator\"\n  };\n\n  const TRIPLE_STRING = {\n    className: \"string\",\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  };\n\n  const PROPERTY = {\n    className: \"property\",\n    begin: regex.concat(/\\./, regex.lookahead(IDENT_RE)),\n    end: IDENT_RE,\n    excludeBegin: true,\n    relevance: 0\n  };\n\n  const FIELD = {\n    relevance: 0,\n    match: regex.concat(/\\b_/, IDENT_RE),\n    scope: \"variable\"\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,\n    scope: \"title.class\",\n    keywords: {\n      _: CORE_CLASSES\n    }\n  };\n\n  // TODO: add custom number modes\n  const NUMBER = hljs.C_NUMBER_MODE;\n\n  const SETTER = {\n    match: [\n      IDENT_RE, /\\s*/,\n      /=/, /\\s*/,\n      /\\(/, IDENT_RE, /\\)\\s*\\{/\n    ],\n    scope: {\n      1: \"title.function\",\n      3: \"operator\",\n      6: \"params\"\n    }\n  };\n\n  const COMMENT_DOCS = hljs.COMMENT(\n    /\\/\\*\\*/,\n    /\\*\\//,\n    {\n      contains: [\n        {\n          match: /@[a-z]+/,\n          scope: \"doctag\"\n        },\n        \"self\"\n      ]\n    }\n  );\n  const SUBST = {\n    scope: \"subst\",\n    begin: /%\\(/,\n    end: /\\)/,\n    contains: [\n      NUMBER,\n      CLASS_REFERENCE,\n      FUNCTION,\n      FIELD,\n      OPERATOR\n    ]\n  };\n  const STRING = {\n    scope: \"string\",\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      SUBST,\n      {\n        scope: \"char.escape\",\n        variants: [\n          { match: /\\\\\\\\|\\\\[\"0%abefnrtv]/ },\n          { match: /\\\\x[0-9A-F]{2}/ },\n          { match: /\\\\u[0-9A-F]{4}/ },\n          { match: /\\\\U[0-9A-F]{8}/ }\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ALL_KWS = [...KEYWORDS, ...LANGUAGE_VARS, ...LITERALS];\n  const VARIABLE = {\n    relevance: 0,\n    match: regex.concat(\n      \"\\\\b(?!\",\n      ALL_KWS.join(\"|\"),\n      \"\\\\b)\",\n      /[a-zA-Z_]\\w*(?:[?!]|\\b)/\n    ),\n    className: \"variable\"\n  };\n\n  // TODO: reconsider this in the future\n  const ATTRIBUTE = {\n    // scope: \"meta\",\n    scope: \"comment\",\n    variants: [\n      {\n        begin: [/#!?/, /[A-Za-z_]+(?=\\()/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        keywords: {\n          literal: LITERALS\n        },\n        contains: [\n          // NUMBER,\n          // VARIABLE\n        ],\n        end: /\\)/\n      },\n      {\n        begin: [/#!?/, /[A-Za-z_]+/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        end: /$/\n      }\n    ]\n  };\n\n  return {\n    name: \"Wren\",\n    keywords: {\n      keyword: KEYWORDS,\n      \"variable.language\": LANGUAGE_VARS,\n      literal: LITERALS\n    },\n    contains: [\n      ATTRIBUTE,\n      NUMBER,\n      STRING,\n      TRIPLE_STRING,\n      COMMENT_DOCS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CLASS_REFERENCE,\n      CLASS_DEFINITION,\n      SETTER,\n      FUNCTION_DEFINITION,\n      FUNCTION,\n      OPERATOR,\n      FIELD,\n      PROPERTY,\n      VARIABLE\n    ]\n  };\n}\n\nmodule.exports = wren;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/wren\" instead of \"highlight.js/lib/languages/wren.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./wren.js');"],"sourceRoot":""}